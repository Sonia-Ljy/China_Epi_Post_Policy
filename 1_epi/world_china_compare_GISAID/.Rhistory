summarise(geometry = st_union(geometry))
select_province_engE = c()
for (j in df3$Name_Province){
select_province_engE = c(select_province_engE,my_dict_CE[j])
}
pE <- ggplot(data = df3) +
geom_sf(fill = province_group_color[ "E"]) +
theme_light()+
theme(axis.title.x=element_blank(),axis.title.y=element_blank(),axis.text=element_text(size=12),
plot.title = element_text(colour = "black", face = "bold", size = 18, vjust = 0.5,hjust = 0.5))+
theme(legend.position = "none") +
ggtitle(paste0("Group ", "E"))+
# geom_sf_text(aes(label = select_province_engE),size=1.5,color = "black")
geom_sf_label(aes(label = select_province_engE),label.size = 0.2,size = 2)
# ggsave(filename = paste0(paste0(dirpath,"plot_China_all/group", "E"),'.pdf'),plot = pE,device = "pdf",width = 8, height = 8)
groufile_g <- subset(groufile, Group == "F")
all_province = rownames(groufile_g)
all_code = c()
for (i in seq(from=1, to=length(all_province))){
temp_code = as.integer(unique(subset(china, Name_Province == my_dict_EC[all_province[i]])$Code_Province))
all_code = c(all_code,temp_code)
}
df3 <- china %>%
filter(Code_Province %in% as.character(all_code))
df3 <- df3 %>%
group_by(Name_Province) %>%
summarise(geometry = st_union(geometry))
select_province_engF = c()
for (j in df3$Name_Province){
select_province_engF = c(select_province_engF,my_dict_CE[j])
}
pF <- ggplot(data = df3) +
geom_sf(fill = province_group_color["F"]) +
theme_light()+
theme(axis.title.x=element_blank(),axis.title.y=element_blank(),axis.text=element_text(size=12),
plot.title = element_text(colour = "black", face = "bold", size = 18, vjust = 0.5,hjust = 0.5))+
theme(legend.position = "none") +
ggtitle(paste0("Group ","F"))+
# geom_sf_text(aes(label = select_province_engF),size=1.5,color = "black")
geom_sf_label(aes(label = select_province_engF),label.size = 0.2,size = 2)
# ggsave(filename = paste0(paste0(dirpath,"plot_China_all/group","F"),'.pdf'),plot = pF,device = "pdf",width = 8, height = 8)
library(patchwork)
pAll = pA+pB+pC+pD+pE+pF+plot_layout(ncol = 2) & scale_y_continuous(limits = c(18, 55)) & scale_x_continuous(limits = c(73, 135))
pAll
pAll = pA+pB+pC+pD+pE+pF+plot_layout(ncol = 3) & scale_y_continuous(limits = c(18, 55)) & scale_x_continuous(limits = c(73, 135))
pAll
ggsave(filename = paste0(paste0(dirpath,"plot_China_all/group_ALL2"),'.pdf'),plot = pAll,device = "pdf",width = 12, height = 8)
p1
# 加载所需包
library(maps)
library(ggplot2)
library(rmapshaper)
# 下载中国地图数据
# 下载中国地图数据
# china_map <- map("world", "China", fill = TRUE, plot = FALSE)
library(hchinamap)
download.file('https://mdniceczx.oss-cn-beijing.aliyuncs.com/chinadf.rda', file.path(dir, 'chinadf.rda'))
name 是地图数据中的各个区域单元的名称
hchinamap(
name = c("重庆", "湖南"),
value = c(100, 100),
width = "100%",
height = "650px",
# title = "分省地图",
region = "China",
minColor = "#f1eef6",
maxColor = "#980043",
itermName = "指标",
# legendVerticalAlign="none",
hoverColor = "#f6acf5"
)
View(hchinamap)
hchinamap$name
hchinamap(china$name)
Chongqing <- chinadf %>% dplyr::filter(region == "Chongqing")
readLines("https://data.jianshukeji.com/jsonp?filename=geochina/chongqing.json", warn = F) %>%
str_match(string = ., pattern = "\\((.*)\\)") -> text
dir <- tempdir()
download.file('https://mdniceczx.oss-cn-beijing.aliyuncs.com/chinadf.rda', file.path(dir, 'chinadf.rda'))
load(file.path(dir, 'chinadf.rda'), verbose = TRUE)
chinadf
View(chinadf)
# china_map <- map("world", "China", fill = TRUE, plot = FALSE)
Rdata<-read.csv("/home/soniali/Desktop/01_china_recom/1_epi/China_except_sh.csv")
head(Rdata)
# china_map <- map("world", "China", fill = TRUE, plot = FALSE)
Rdata<-read.csv("/home/soniali/Desktop/01_china_recom/1_epi/China_except_sh.csv")
head(Rdata)
hchinamap(name = Rdata$name, #要绘制的省份或城市
value = Rdata$value,#要可视化的数据
width = "100%", #地图的宽度
height = "400px",#地图的高度
# title = "R语言绘制中国地图", #地图标题
minColor = "#458B74",#最小值的颜色
maxColor = "#8B2323",#最大值的颜色
region = "China"#要绘制的区域
)
hchinamap(name = Rdata$name, #要绘制的省份或城市
value = Rdata$value,#要可视化的数据
width = "100%", #地图的宽度
height = "400px",#地图的高度
# title = "R语言绘制中国地图", #地图标题
minColor = "#5774E1",#最小值的颜色
maxColor = "#B70E29",#最大值的颜色
region = "China"#要绘制的区域
)
hchinamap(name = Rdata$name, #要绘制的省份或城市
value = Rdata$value,#要可视化的数据
width = "100%", #地图的宽度
height = "400px",#地图的高度
# title = "R语言绘制中国地图", #地图标题
minColor = "#C0C0C0",#最小值的颜色
maxColor = "#B70E29",#最大值的颜色
region = "China"#要绘制的区域
)
hchinamap(name = Rdata$name, #要绘制的省份或城市
value = Rdata$value,#要可视化的数据
width = "100%", #地图的宽度
height = "400px",#地图的高度
# title = "R语言绘制中国地图", #地图标题
minColor = "#FBEBDA",#最小值的颜色
maxColor = "#B70E29",#最大值的颜色
region = "China"#要绘制的区域
)
hchinamap(name = Rdata$name, #要绘制的省份或城市
value = Rdata$value,#要可视化的数据
width = "100%", #地图的宽度
height = "400px",#地图的高度
# title = "R语言绘制中国地图", #地图标题
minColor = "#F0F0F0",#最小值的颜色
maxColor = "#B70E29",#最大值的颜色
region = "China"#要绘制的区域
)
hchinamap(name = Rdata$name, #要绘制的省份或城市
value = Rdata$value,#要可视化的数据
width = "100%", #地图的宽度
height = "400px",#地图的高度
# title = "R语言绘制中国地图", #地图标题
minColor = "#F0F0F0",#最小值的颜色
maxColor = "#B8142E",#最大值的颜色 #B70E29
region = "China"#要绘制的区域
)
hchinamap(name = Rdata$name, #要绘制的省份或城市
value = Rdata$value,#要可视化的数据
width = "100%", #地图的宽度
height = "400px",#地图的高度
# title = "R语言绘制中国地图", #地图标题
minColor = "#F0F0F0",#最小值的颜色
maxColor = "#C6341B",#最大值的颜色 #B70E29 ,#B8142E
region = "China"#要绘制的区域
)
hchinamap(name = Rdata$name, #要绘制的省份或城市
value = Rdata$value,#要可视化的数据
width = "100%", #地图的宽度
height = "400px",#地图的高度
# title = "R语言绘制中国地图", #地图标题
minColor = "#F0F0F0",#最小值的颜色
maxColor = "#B8142E",#最大值的颜色 #B70E29 ,#B8142E
region = "China"#要绘制的区域
)
data1 <- t(data)
p1 <- pheatmap(data1,
scale = "none",cluster_cols=TRUE,clustering_distance_cols = "manhattan",display_numbers = matrix(ifelse(data1 > 0.5, "*", ""), nrow(data1)),
cellwidth = 12, cellheight = 15,cutree_cols=8,
annotation_col = groufile,annotation_colors = ann_colors,
# color = c(colorRampPalette(colors = c("#5774E1","white"))(length(bk)/2),colorRampPalette(colors = c("white","#B70E29"))(length(bk)/2)),
color = c(colorRampPalette(colors = c("#5774E1","white"))(length(seq(0,0.2,by=0.01))),colorRampPalette(colors = c("white","#B70E29"))(length(seq(0.21,1,by=0.01)))),
legend_breaks=seq(0,1,0.1),angle_col = 45,
breaks=bk)
p1
p1 <- pheatmap(data1,
scale = "none",cluster_cols=TRUE,clustering_distance_cols = "manhattan",display_numbers = matrix(ifelse(data1 > 0.5, "*", ""), nrow(data1)),
cellwidth = 12, cellheight = 15,cutree_cols=8,
annotation_col = groufile,annotation_colors = ann_colors,
# color = c(colorRampPalette(colors = c("#5774E1","white"))(length(bk)/2),colorRampPalette(colors = c("white","#B70E29"))(length(bk)/2)),
color = c(colorRampPalette(colors = c("#5774E1","white"))(length(seq(0,0.2,by=0.01))),colorRampPalette(colors = c("white","#B70E29"))(length(seq(0.21,1,by=0.01)))),
legend_breaks=seq(0,1,0.1),angle_col = 45,fontsize_row = 3,
breaks=bk)
p1
p1 <- pheatmap(data1,
scale = "none",cluster_cols=TRUE,clustering_distance_cols = "manhattan",display_numbers = matrix(ifelse(data1 > 0.5, "*", ""), nrow(data1)),
cellwidth = 12, cellheight = 15,cutree_cols=8,
annotation_col = groufile,annotation_colors = ann_colors,
# color = c(colorRampPalette(colors = c("#5774E1","white"))(length(bk)/2),colorRampPalette(colors = c("white","#B70E29"))(length(bk)/2)),
color = c(colorRampPalette(colors = c("#5774E1","white"))(length(seq(0,0.2,by=0.01))),colorRampPalette(colors = c("white","#B70E29"))(length(seq(0.21,1,by=0.01)))),
legend_breaks=seq(0,1,0.1),angle_col = 45,fontsize_row = 5,
breaks=bk)
p1
ggsave(filename = paste0(paste0(dirpath,"plot_China_all/region_lin_frequency_heatmap5"),'.pdf'),plot = p1,device = "pdf",width = 9, height = 5)
p1 <- pheatmap(data1,
scale = "none",cluster_cols=TRUE,clustering_distance_cols = "manhattan",display_numbers = matrix(ifelse(data1 > 0.5, "*", ""), nrow(data1)),
cellwidth = 12, cellheight = 15,cutree_cols=8,
annotation_col = groufile,annotation_colors = ann_colors,
# color = c(colorRampPalette(colors = c("#5774E1","white"))(length(bk)/2),colorRampPalette(colors = c("white","#B70E29"))(length(bk)/2)),
color = c(colorRampPalette(colors = c("#5774E1","white"))(length(seq(0,0.2,by=0.01))),colorRampPalette(colors = c("white","#B70E29"))(length(seq(0.21,1,by=0.01)))),
legend_breaks=seq(0,1,0.1),angle_col = 45,fontsize_row = 3.5,
breaks=bk)
p1
ggsave(filename = paste0(paste0(dirpath,"plot_China_all/region_lin_frequency_heatmap5"),'.pdf'),plot = p1,device = "pdf",width = 9, height = 5)
p1 <- pheatmap(data1,
scale = "none",cluster_cols=TRUE,clustering_distance_cols = "manhattan",display_numbers = matrix(ifelse(data1 > 0.5, "*", ""), nrow(data1)),
cellwidth = 12, cellheight = 15,cutree_cols=8,
annotation_col = groufile,annotation_colors = ann_colors,
# color = c(colorRampPalette(colors = c("#5774E1","white"))(length(bk)/2),colorRampPalette(colors = c("white","#B70E29"))(length(bk)/2)),
color = c(colorRampPalette(colors = c("#5774E1","white"))(length(seq(0,0.2,by=0.01))),colorRampPalette(colors = c("white","#B70E29"))(length(seq(0.21,1,by=0.01)))),
legend_breaks=seq(0,1,0.1),angle_col = 45,fontsize_row = 2,
breaks=bk)
p1
ggsave(filename = paste0(paste0(dirpath,"plot_China_all/region_lin_frequency_heatmap5"),'.pdf'),plot = p1,device = "pdf",width = 9, height = 5)
p1 <- pheatmap(data1,
scale = "none",cluster_cols=TRUE,clustering_distance_cols = "manhattan",display_numbers = matrix(ifelse(data1 > 0.5, "*", ""), nrow(data1)),
cellwidth = 12, cellheight = 15,cutree_cols=8,
annotation_col = groufile,annotation_colors = ann_colors,
# color = c(colorRampPalette(colors = c("#5774E1","white"))(length(bk)/2),colorRampPalette(colors = c("white","#B70E29"))(length(bk)/2)),
color = c(colorRampPalette(colors = c("#5774E1","white"))(length(seq(0,0.2,by=0.01))),colorRampPalette(colors = c("white","#B70E29"))(length(seq(0.21,1,by=0.01)))),
legend_breaks=seq(0,1,0.1),angle_col = 45,fontsize_row = 5,
breaks=bk)
p1
ggsave(filename = paste0(paste0(dirpath,"plot_China_all/region_lin_frequency_heatmap5"),'.pdf'),plot = p1,device = "pdf",width = 9, height = 5)
p1 <- pheatmap(data1,
scale = "none",cluster_cols=TRUE,clustering_distance_cols = "manhattan",display_numbers = matrix(ifelse(data1 > 0.5, "*", ""), nrow(data1)),
cellwidth = 12, cellheight = 15,cutree_cols=8,
annotation_col = groufile,annotation_colors = ann_colors,
# color = c(colorRampPalette(colors = c("#5774E1","white"))(length(bk)/2),colorRampPalette(colors = c("white","#B70E29"))(length(bk)/2)),
color = c(colorRampPalette(colors = c("#5774E1","white"))(length(seq(0,0.2,by=0.01))),colorRampPalette(colors = c("white","#B70E29"))(length(seq(0.21,1,by=0.01)))),
legend_breaks=seq(0,1,0.1),angle_col = 45,fontsize_row = 8,fontsize_col = 5,
breaks=bk)
p1
ggsave(filename = paste0(paste0(dirpath,"plot_China_all/region_lin_frequency_heatmap5"),'.pdf'),plot = p1,device = "pdf",width = 9, height = 5)
p1 <- pheatmap(data1,
scale = "none",cluster_cols=TRUE,clustering_distance_cols = "manhattan",display_numbers = matrix(ifelse(data1 > 0.5, "*", ""), nrow(data1)),
cellwidth = 12, cellheight = 15,cutree_cols=8,
annotation_col = groufile,annotation_colors = ann_colors,
# color = c(colorRampPalette(colors = c("#5774E1","white"))(length(bk)/2),colorRampPalette(colors = c("white","#B70E29"))(length(bk)/2)),
color = c(colorRampPalette(colors = c("#5774E1","white"))(length(seq(0,0.2,by=0.01))),colorRampPalette(colors = c("white","#B70E29"))(length(seq(0.21,1,by=0.01)))),
legend_breaks=seq(0,1,0.1),angle_col = 45,fontsize_row = 8,fontsize_col = 6,
breaks=bk)
p1
ggsave(filename = paste0(paste0(dirpath,"plot_China_all/region_lin_frequency_heatmap5"),'.pdf'),plot = p1,device = "pdf",width = 9, height = 5)
p1 <- pheatmap(data1,
scale = "none",cluster_cols=TRUE,clustering_distance_cols = "manhattan",display_numbers = matrix(ifelse(data1 > 0.5, "*", ""), nrow(data1)),
cellwidth = 12, cellheight = 15,cutree_cols=8,
annotation_col = groufile,annotation_colors = ann_colors,
# color = c(colorRampPalette(colors = c("#5774E1","white"))(length(bk)/2),colorRampPalette(colors = c("white","#B70E29"))(length(bk)/2)),
color = c(colorRampPalette(colors = c("#5774E1","white"))(length(seq(0,0.2,by=0.01))),colorRampPalette(colors = c("white","#B70E29"))(length(seq(0.21,1,by=0.01)))),
legend_breaks=seq(0,1,0.1),angle_col = 45,fontsize_row = 8,fontsize_col = 7,
breaks=bk)
p1
ggsave(filename = paste0(paste0(dirpath,"plot_China_all/region_lin_frequency_heatmap5"),'.pdf'),plot = p1,device = "pdf",width = 9, height = 5)
library(ggtree)
library(treeio)
library(ggplot2)
library(tidyverse)
setwd('/home/soniali/Desktop/01_china_recom/0_raw_data/next_recom/snipit/left/')
tree <- read.newick("FE.1_recom_FR.1.1_masked_left.fasta.treefile",node.label = 'support')
tree <- drop.tip(tree,'Reference') #删除游离的参考基因组样本
MRCA(tree, "EPI_ISL_18101315_FE.1", "EPI_ISL_18101313_FE.1")
MRCA(tree, "C_AA030871.1_FR.1.1","C_AA037154.1_FR.1.1","C_AA037256.1_FR.1.1","C_AA037234.1_FR.1.1","C_AA037204.1_FR.1.1","C_AA037540.1_FR.1.1","C_AA038331.1_FR.1.1","C_AA038701.1_FR.1.1","C_AA036799.1_FR.1.1","C_AA036729.1_FR.1.1","EPI_ISL_17994535_FR.1.1","EPI_ISL_18060821_FR.1.1","EPI_ISL_18060751_FR.1.1","EPI_ISL_18074541_FR.1.1","EPI_ISL_18074511_FR.1.1","EPI_ISL_18074780_FR.1.1","EPI_ISL_18074563_FR.1.1","EPI_ISL_18074461_FR.1.1","EPI_ISL_18105577_FR.1.1","EPI_ISL_18108456_FR.1.1")
MRCA(tree, "C_AA038410.1_recom","C_AA044601.1_recom","C_AA047643.1_recom","EPI_ISL_18284946_recom","EPI_ISL_18289774_recom","EPI_ISL_18289734_recom","EPI_ISL_18289815_recom","EPI_ISL_18401744_recom","EPI_ISL_18105656_recom")
p <-ggtree(tree,color='#C0C0C0',linetype=1,size=1.5,ladderize=T) + xlim(0,0.003) + #  0.03  0.004
geom_tiplab(hjust = -0.05,size=3,fontface="italic",align = F,angle = 0,layout_dendrogram()) +#
# geom_point2(aes(subset=!isTip),fill="red",shape=21,size=4) + #A62B19
# geom_text2(aes(subset=!isTip,label=support,color=support, hjust=-0.6),size=4) +
# scale_color_gradient(high='red', low='Navy') +
# geom_cladelabel(node=61, label="zygote", offset = 10,barsize = 1,color=c("black","red2"), align=TRUE) +
theme(legend.position='left') +
geom_treescale()+
geom_highlight(node = 61,fill = "#E4C4CB")+
geom_highlight(node = 33,fill = "#9FC6C4")
source("~/Desktop/01_china_recom/0_raw_data/next_recom/snipit/ggtree.r", echo=TRUE)
setwd('/home/soniali/Desktop/01_china_recom/0_raw_data/next_recom/snipit/middle/')
tree <- read.newick("FE.1_recom_FR.1.1_masked_middle.fasta.treefile",node.label = 'support')
tree <- drop.tip(tree,'Reference') #删除游离的参考基因组样本
MRCA(tree, "EPI_ISL_18101315_FE.1", "EPI_ISL_18101313_FE.1")
MRCA(tree, "C_AA030871.1_FR.1.1","C_AA037154.1_FR.1.1","C_AA037256.1_FR.1.1","C_AA037234.1_FR.1.1","C_AA037204.1_FR.1.1","C_AA037540.1_FR.1.1","C_AA038331.1_FR.1.1","C_AA038701.1_FR.1.1","C_AA036799.1_FR.1.1","C_AA036729.1_FR.1.1","EPI_ISL_17994535_FR.1.1","EPI_ISL_18060821_FR.1.1","EPI_ISL_18060751_FR.1.1","EPI_ISL_18074541_FR.1.1","EPI_ISL_18074511_FR.1.1","EPI_ISL_18074780_FR.1.1","EPI_ISL_18074563_FR.1.1","EPI_ISL_18074461_FR.1.1","EPI_ISL_18105577_FR.1.1","EPI_ISL_18108456_FR.1.1")
MRCA(tree, "C_AA038410.1_recom","C_AA044601.1_recom","C_AA047643.1_recom","EPI_ISL_18284946_recom","EPI_ISL_18289774_recom","EPI_ISL_18289734_recom","EPI_ISL_18289815_recom","EPI_ISL_18401744_recom","EPI_ISL_18105656_recom")
p <-ggtree(tree,color='#C0C0C0',linetype=1,size=1.5,ladderize=T) + xlim(0,0.003) + #  0.03  0.004
geom_tiplab(hjust = -0.05,size=3,fontface="italic",align = F,angle = 0,layout_dendrogram()) +#
# geom_point2(aes(subset=!isTip),fill="red",shape=21,size=4) + #A62B19
# geom_text2(aes(subset=!isTip,label=support,color=support, hjust=-0.6),size=4) +
# scale_color_gradient(high='red', low='Navy') +
# geom_cladelabel(node=61, label="zygote", offset = 10,barsize = 1,color=c("black","red2"), align=TRUE) +
theme(legend.position='left') +
geom_treescale()+
geom_highlight(node = 61,fill = "#E4C4CB")+
geom_highlight(node = 33,fill = "#9FC6C4")
p
p <-ggtree(tree,color='#C0C0C0',linetype=1,size=1.5,ladderize=T) + xlim(0,0.03) + #  0.03  0.004
geom_tiplab(hjust = -0.05,size=3,fontface="italic",align = F,angle = 0,layout_dendrogram()) +#
# geom_point2(aes(subset=!isTip),fill="red",shape=21,size=4) + #A62B19
# geom_text2(aes(subset=!isTip,label=support,color=support, hjust=-0.6),size=4) +
# scale_color_gradient(high='red', low='Navy') +
# geom_cladelabel(node=61, label="zygote", offset = 10,barsize = 1,color=c("black","red2"), align=TRUE) +
theme(legend.position='left') +
geom_treescale()+
geom_highlight(node = 61,fill = "#E4C4CB")+
geom_highlight(node = 33,fill = "#9FC6C4")
p
p <-ggtree(tree,color='#C0C0C0',linetype=1,size=1.5,ladderize=T) + xlim(0,0.04) + #  0.03  0.004
geom_tiplab(hjust = -0.05,size=3,fontface="italic",align = F,angle = 0,layout_dendrogram()) +#
# geom_point2(aes(subset=!isTip),fill="red",shape=21,size=4) + #A62B19
# geom_text2(aes(subset=!isTip,label=support,color=support, hjust=-0.6),size=4) +
# scale_color_gradient(high='red', low='Navy') +
# geom_cladelabel(node=61, label="zygote", offset = 10,barsize = 1,color=c("black","red2"), align=TRUE) +
theme(legend.position='left') +
geom_treescale()+
geom_highlight(node = 61,fill = "#E4C4CB")+
geom_highlight(node = 33,fill = "#9FC6C4")
p
p <-ggtree(tree,color='#C0C0C0',linetype=1,size=1.5,ladderize=T) + xlim(0,0.03) + #  0.03  0.004
geom_tiplab(hjust = -0.05,size=3,fontface="italic",align = F,angle = 0,layout_dendrogram()) +#
# geom_point2(aes(subset=!isTip),fill="red",shape=21,size=4) + #A62B19
# geom_text2(aes(subset=!isTip,label=support,color=support, hjust=-0.6),size=4) +
# scale_color_gradient(high='red', low='Navy') +
# geom_cladelabel(node=61, label="zygote", offset = 10,barsize = 1,color=c("black","red2"), align=TRUE) +
theme(legend.position='left') +
geom_treescale()+
geom_highlight(node = 61,fill = "#E4C4CB")+
geom_highlight(node = 33,fill = "#9FC6C4")
p
p <-ggtree(tree,color='#C0C0C0',linetype=1,size=1.5,ladderize=T) + xlim(0,0.04) + #  0.03  0.004
geom_tiplab(hjust = -0.05,size=3,fontface="italic",align = F,angle = 0,layout_dendrogram()) +#
# geom_point2(aes(subset=!isTip),fill="red",shape=21,size=4) + #A62B19
# geom_text2(aes(subset=!isTip,label=support,color=support, hjust=-0.6),size=4) +
# scale_color_gradient(high='red', low='Navy') +
# geom_cladelabel(node=61, label="zygote", offset = 10,barsize = 1,color=c("black","red2"), align=TRUE) +
theme(legend.position='left') +
geom_treescale()+
geom_highlight(node = 61,fill = "#E4C4CB")+
geom_highlight(node = 33,fill = "#9FC6C4")
p
p <-ggtree(tree,color='#C0C0C0',linetype=1,size=1.5,ladderize=T) + xlim(0,0.04) + #  0.03  0.004
geom_tiplab(hjust = -0.05,size=3,fontface="italic",align = F,angle = 0,layout_dendrogram()) +#
# geom_point2(aes(subset=!isTip),fill="red",shape=21,size=4) + #A62B19
# geom_text2(aes(subset=!isTip,label=support,color=support, hjust=-0.6),size=4) +
# scale_color_gradient(high='red', low='Navy') +
# geom_cladelabel(node=61, label="zygote", offset = 10,barsize = 1,color=c("black","red2"), align=TRUE) +
theme(legend.position='left') +
geom_treescale()+
geom_highlight(node = 61,fill = "#E4C4CB")+
geom_highlight(node = 33,fill = "#9FC6C4")
p
ggsave(filename = paste0("FE.1_recom_FR.1.1_middle_v3",".pdf"),plot = p,device = "pdf",width = 8, height = 5)
p <-ggtree(tree,color='#C0C0C0',linetype=1,size=1.5,ladderize=T) + xlim(0,0.04) + #  0.03  0.004
geom_tiplab(hjust = -0.05,size=3,fontface="italic",align = F,angle = 0,layout_dendrogram()) +#
# geom_point2(aes(subset=!isTip),fill="red",shape=21,size=4) + #A62B19
# geom_text2(aes(subset=!isTip,label=support,color=support, hjust=-0.6),size=4) +
# scale_color_gradient(high='red', low='Navy') +
# geom_cladelabel(node=61, label="zygote", offset = 10,barsize = 1,color=c("black","red2"), align=TRUE) +
theme(legend.position='top') +
geom_treescale()+
geom_highlight(node = 61,fill = "#E4C4CB")+
geom_highlight(node = 33,fill = "#9FC6C4")
p
ggsave(filename = paste0("FE.1_recom_FR.1.1_middle_v2",".pdf"),plot = p,device = "pdf",width = 8, height = 5)
alpha_map
# 导入必要的包
library(ggplot2)
library(ggridges)
library(dplyr)
library(tidyr)
library(forcats)
library(dplyr)
library(reshape2)
library(patchwork)
# library(ridgeline)
setwd("/home/soniali/Desktop/01_china_recom/1_epi/world_china_compare_GISAID/")
# "Australia"      "South Africa"   "USA"            "Japan"          "United Kingdom"
df <- read.table("Qualified_world_china_meta_merged_202212_202310.txt",sep = ",",header = TRUE)
head(df)
dim(df)
unique(df$merged_lineage)
df <- subset(df, df$merged_lineage != "Others")
new_df <- subset(df, new_df$country != "South Africa")
df_time = as.Date(new_df$date,"%Y-%m-%d")
df_time2 <- as.numeric(df_time)
df <- read.table("Qualified_world_china_meta_merged_202212_202310.txt",sep = ",",header = TRUE)
head(df)
dim(df)
unique(df$merged_lineage)
df <- subset(df, df$merged_lineage != "Others")
new_df <- subset(df, new_df$country != "South Africa")
new_df <- subset(df, new_df$country != "South Africa")
df <- subset(df, df$merged_lineage != "Others")
new_df <- subset(df, df$country != "South Africa")
df_time = as.Date(new_df$date,"%Y-%m-%d")
df_time2 <- as.numeric(df_time)
new_df$date_num <- df_time2
new_df$merged_lineage <- factor(
new_df$merged_lineage,
)
head(new_df)
unique(new_df$merged_lineage)
# 使用dcast函数进行转换
df_date_country  <- data.frame()
df_date_country
colors_list = c("#82ADCF","#4F72B1","#F0B26D","#F4D586","#B7D7E9","#5D9488","#9372A9","#C5432E") #,"#9C9A99"
lineages = c( 'BA.5.2*',  'BA.2.75*', 'BF.7.14*', 'XBB.1.5*',  'XBB.2.3*','XBB.1.16*','XBB.1.22*','XBB.1.9*')
# colors_list<-pal_nejm("default",alpha = 0.8)(8)##(9表示呈现多少个颜色)
new_df$merged_lineage <- factor(new_df$merged_lineage,level = lineages)
p1 <- ggplot(new_df, aes(x=date_num, y=country, color=merged_lineage, point_color=merged_lineage, fill=merged_lineage)) +
geom_density_ridges(
jittered_points=FALSE, scale = .95, rel_min_height = .01,alpha = 0.6,
# point_shape = "|", point_size = 3, size = 0.25,
position = position_points_jitter(height = 0)
) + facet_wrap(~merged_lineage,nrow = 2)+
scale_y_discrete(expand = c(.01, 0)) +
scale_x_continuous(expand = c(0, 0), name = "Collection Date") +
scale_fill_manual(values = colors_list) + #, labels = lineages
scale_color_manual(values = colors_list, guide = "none") +
scale_discrete_manual("point_color", values = colors_list, guide = "none") +
theme_ridges(center = TRUE)+
theme(legend.position = "none")
p1
p2 <- ggplot(new_df, aes(x=date_num, y=country, color=merged_lineage, point_color=merged_lineage, fill=merged_lineage)) +
geom_density_ridges(
jittered_points=FALSE, scale = .95, rel_min_height = .01,alpha = 0.3,
# point_shape = "|", point_size = 3, size = 0.25,
position = position_points_jitter(height = 0)
) +
scale_y_discrete(expand = c(.01, 0)) +
scale_x_continuous(expand = c(0, 0), name = "Collection Date") +
scale_fill_manual(values = colors_list) + #, labels = lineages
scale_color_manual(values = colors_list, guide = "none") +
scale_discrete_manual("point_color", values = colors_list, guide = "none") +
theme_ridges(center = TRUE)+
theme(legend.position = "bottom")
p2
p2
#
#   # 绘制山脊图
#   p1 <- ggplot(data,aes(x = value,y = lineage,fill = lineage)) +
#     geom_density_ridges(alpha = 0.4) +
#     # geom_density(aes(fill = lineage), color = "black", alpha = 0.8,size=0.5)+
#     theme_ridges() +
#     labs(x = "Collection Date",y = "",title = country_select)
#   p1
#   ggsave(filename = paste0("plot_",country_select,"_top8_lineages",".pdf"),plot = p1,device = "pdf",width = 10, height = 8)
# }
renew_x = as.Date(c(19400,19500,19600),origin = "1970-01-01")
#
#   # 绘制山脊图
#   p1 <- ggplot(data,aes(x = value,y = lineage,fill = lineage)) +
#     geom_density_ridges(alpha = 0.4) +
#     # geom_density(aes(fill = lineage), color = "black", alpha = 0.8,size=0.5)+
#     theme_ridges() +
#     labs(x = "Collection Date",y = "",title = country_select)
#   p1
#   ggsave(filename = paste0("plot_",country_select,"_top8_lineages",".pdf"),plot = p1,device = "pdf",width = 10, height = 8)
# }
as.Date(c(19400,19500,19600),origin = "1970-01-01")
new_df
p2 <- ggplot(new_df, aes(x=date_num, y=country, color=merged_lineage, point_color=merged_lineage, fill=merged_lineage)) +
geom_density_ridges(
jittered_points=FALSE, scale = .95, rel_min_height = .01,alpha = 0.3,
# point_shape = "|", point_size = 3, size = 0.25,
position = position_points_jitter(height = 0)
) +
scale_y_discrete(expand = c(.01, 0)) +
scale_x_continuous(expand = c(0, 0), name = "Collection Date") +
scale_fill_manual(values = colors_list) + #, labels = lineages
scale_color_manual(values = colors_list, guide = "none") +
scale_discrete_manual("point_color", values = colors_list, guide = "none") +
theme_ridges(center = TRUE)+
theme(legend.position = "bottom")
p2
new_df
getwd()
write.csv(new_df, "plot_top8_lineages.csv", row.names = FALSE)
df <- read.table("Qualified_world_china_meta_merged_202212_202310.txt",sep = ",",header = TRUE)
head(df)
dim(df)
unique(df$merged_lineage)
df <- subset(df, df$merged_lineage != "Others")
new_df <- subset(df, df$country != "South Africa")
df_time = as.Date(new_df$date,"%Y-%m-%d")
df_time2 <- as.numeric(df_time)
new_df$date_num <- df_time2
new_df$merged_lineage <- factor(
new_df$merged_lineage,
)
head(new_df)
unique(new_df$merged_lineage)
# 使用dcast函数进行转换
df_date_country  <- data.frame()
df_date_country
# colors_list = c('#791E94','#58C9B9','#519D9E','#D1B6E1',"#4F75BB","#E78591","#FE928A","#77CEE7")
# colors_list = c("#82ADCF","#4F72B1","#F0B26D","#F4D586","#B7D7E9","#5D9488","#9372A9","#C5432E","#9C9A99") #,"#9C9A99"
# lineages = c( 'BA.5.2*',  'BA.2.75*', 'BF.7.14*', 'XBB.1.5*',  'XBB.2.3*','XBB.1.16*','XBB.1.22*','XBB.1.9*',"Others")
colors_list = c("#82ADCF","#4F72B1","#F0B26D","#F4D586","#B7D7E9","#5D9488","#9372A9","#C5432E") #,"#9C9A99"
lineages = c( 'BA.5.2*',  'BA.2.75*', 'BF.7.14*', 'XBB.1.5*',  'XBB.2.3*','XBB.1.16*','XBB.1.22*','XBB.1.9*')
# colors_list<-pal_nejm("default",alpha = 0.8)(8)##(9表示呈现多少个颜色)
new_df$merged_lineage <- factor(new_df$merged_lineage,level = lineages)
p1 <- ggplot(new_df, aes(x=date_num, y=country, color=merged_lineage, point_color=merged_lineage, fill=merged_lineage)) +
geom_density_ridges(
jittered_points=FALSE, scale = .95, rel_min_height = .01,alpha = 0.6,
# point_shape = "|", point_size = 3, size = 0.25,
position = position_points_jitter(height = 0)
) + facet_wrap(~merged_lineage,nrow = 2)+
scale_y_discrete(expand = c(.01, 0)) +
scale_x_continuous(expand = c(0, 0), name = "Collection Date") +
scale_fill_manual(values = colors_list) + #, labels = lineages
scale_color_manual(values = colors_list, guide = "none") +
scale_discrete_manual("point_color", values = colors_list, guide = "none") +
theme_ridges(center = TRUE)+
theme(legend.position = "none")
p1
new_df
new_df
unique(new_df$country)
new_df_china <- subset(new_df, new_df$country == "China")
write.csv(new_df_china, "plot_top8_lineages_china.csv", row.names = FALSE)
